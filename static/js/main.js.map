{"version":3,"sources":["../webpack/bootstrap","constants/index.js","redux/workLog/action.js","redux/workLog/reducer.js","redux/autocomment/actions.js","redux/autocomment/reducer.js","redux/home/action.js","redux/home/reducer.js","redux/save/action.js","redux/save/reducer.js","redux/rootReducer.js","redux/save/saga.js","redux/rootSaga.js","redux/store.js","components/workLog/Filter.js","components/workLog/NewRow.js","components/AutoComment.js","components/AutoComplete.js","constants/endPoints.js","utils/index.js","components/workLog/index.js","components/Button.js","components/Save.js","components/Error.js","components/SavedLogs.js","components/Footer.js","App.js","index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","this","oldJsonpFunction","slice","TOGGLE_AUTO_COMMENT","ADD_NEW_ROW","EDIT_ACTION","DELETE_ROW","FILTER_BY","SAVE_DOMAIN","addNewRow","createAction","onEditIssue","delRow","filterBy","resetStore","DEFAULT_STATE","workLogItems","handlers","state","newRow","id","nanoid","issue","timeSpent","logDate","Date","toISOString","split","comment","newWorkLog","action","payload","updateWorkLog","map","row","filter","handleActions","toggleAutoComment","autoComment","saveDomain","putError","domain","error","saveLogs","setSaveStatus","updateSavedLogs","resetSavedLogs","savingInProgress","inProgress","savedLogs","console","log","combineReducers","worklogs","home","loggedDetails","saveReducer","postWorkLog","saveAllLogs","saveLogsSaga","issues","select","promiseArray","Array","isArray","bodyData","fetch","method","headers","body","then","response","json","catch","err","put","promises","Promise","allSettled","results","all","takeLatest","rootSaga","sagaMiddleware","createSagaMiddleware","middleware","enhancers","applyMiddleware","store","createStore","rootReducer","composeWithDevTools","run","dispatch","props","useDispatch","placeholder","onChange","e","type","target","className","Filter","onClick","AutoComment","useSelector","htmlFor","AutoComplete","suggestionsListComponent","useState","activeSuggestion","setActiveSuggestion","filteredSuggestions","setFilteredSuggestions","showSuggestions","setShowSuggestions","userInput","setUserInput","fetchData","query","url","header","getAutoSuggestURLDetails","dataList","sections","processChanges","useMemo","func","timer","timeout","args","clearTimeout","setTimeout","debounce_loading","addAutoComment","suggestion","index","src","img","summaryText","currentTarget","autoComplete","onKeyDown","keyCode","WorkLog","handleOnChange","includes","style","display","Button","clickHandler","buttonText","Save","logsToSave","Error","href","preventDefault","SavedLogs","res","self","errorMessages","marginLeft","started","text","logArry","color","join","Footer","App","useEffect","chrome","tabs","active","lastFocusedWindow","NewRow","rootElement","document","getElementById","ReactDOM","render"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,EAAG,GAGAK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,IAExB,IAAIC,EAAaC,KAAK,uCAAyCA,KAAK,wCAA0C,GAC1GC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,GAAG,IAElBM,I,yLCvJIyC,EAAsB,sBACtBC,EAAc,cACdC,EAAc,cACdC,EAAa,aACbC,EAAY,YAEZC,EAAc,cCHdC,EAAYC,YAAaN,GACzBO,EAAcD,YAAaL,GAC3BO,EAASF,YAAaJ,GACtBO,EAAWH,YAAaH,GAExBO,EAAaJ,YDHC,e,QEDrBK,EAAgB,CACpBC,aAAc,GACdH,SAAU,IAGNI,GAAQ,mBACXR,GAAY,SAAAS,GAAU,IAAD,EACdC,EAAS,CACbC,GAAIC,cACJC,MAAO,GACPC,UAAW,GACXC,QAAQ,GAAD,QAAK,IAAIC,MAAOC,cAAcC,MAAM,KAAK,IAChDC,QAAS,IAELC,GAAa,UAAAX,EAAMF,oBAAN,eAAoBd,UAAW,GAElD,OADA2B,EAAWzE,KAAK+D,GACT,2BACFD,GADL,IAEEF,aAAca,OAbN,cAgBXlB,GAAc,SAACO,EAAOY,GACrB,MAA4BA,EAAOC,QAA3BX,EAAR,EAAQA,GAAIjC,EAAZ,EAAYA,MAAOT,EAAnB,EAAmBA,KACbsD,EAAgBd,EAAMF,aAAaiB,KAAI,SAAAC,GAY3C,OAXIA,EAAId,KAAOA,IACA,UAAT1C,EACFwD,EAAIZ,MAAQnC,EACM,cAATT,EACTwD,EAAIX,UAAYpC,EACE,YAATT,EACTwD,EAAIN,QAAUzC,EACG,YAATT,IACRwD,EAAIV,QAAUrC,IAGX+C,KAET,OAAO,2BACFhB,GADL,IAEEF,aAAcgB,OAlCN,cAqCXpB,GAAS,SAACM,EAAOY,GAChB,IAAQV,EAAOU,EAAOC,QAAdX,GACFY,EAAgBd,EAAMF,aAAamB,QAAO,SAAAD,GAAG,OAAIA,EAAId,KAAOA,KAClE,OAAO,2BACFF,GADL,IAEEF,aAAcgB,OA1CN,cA6CXnB,GAAW,SAACK,EAAOY,GAClB,MAAwBA,EAAOC,QAAvB5C,EAAR,EAAQA,MAAOT,EAAf,EAAeA,KACf,OAAO,2BACFwC,GADL,IAEEL,SAAU,CAAE1B,QAAOT,aAjDX,cAoDXoC,GAAa,WACZ,OAAO,eACFC,MAtDK,GA2DCqB,cAAcnB,EAAUF,GCjE1BsB,EAAoB3B,YAAaP,GCIxCc,EAAQ,eACXoB,GAAoB,SAAAnB,GACnB,OAAO,2BACFA,GADL,IAEEoB,aAAepB,EAAMoB,iBAKZF,cAAcnB,EAbP,CAClBqB,aAAa,ICDJC,EAAa7B,YAAaF,GAC1BgC,EAAW9B,YLOC,aMHnBO,GAAQ,mBACXsB,GAAa,SAACrB,EAAOY,GACpB,IAAQW,EAAWX,EAAOC,QAAlBU,OACR,OAAO,2BACFvB,GADL,IAEEuB,OAASA,OALD,cAQXD,GAAW,SAACtB,EAAOY,GAChB,IAAOY,EAASZ,EAAOC,QAAhBW,MACP,OAAO,2BACFxB,GADL,IAEEwB,aAZM,GAiBCN,cAAcnB,EAtBP,CAClBwB,OAAQ,GACRC,MAAO,KCFEC,EAAWjC,YPIC,aOHZkC,EAAgBlC,YPIF,eOHdmC,EAAkBnC,YPIE,qBOHpBoC,EAAiBpC,YPIE,oBQF1BO,GAAQ,mBACX0B,GAAW,SAAAzB,GAAK,kCAAUA,GAAV,IAAiB6B,kBAAkB,OADxC,cAEXH,GAAgB,SAAC1B,EAAOY,GACvB,IAAOkB,EAAclB,EAAOC,QAArBiB,WACP,OAAO,2BACA9B,GADP,IAEI6B,iBAAkBC,OANZ,cASXH,GAAkB,SAAC3B,EAAOY,GACzB,IAAOmB,EAAanB,EAAOC,QAApBkB,UAEP,OADAC,QAAQC,IAAI,kBAAkBF,GACvB,2BACA/B,GADP,IAEI+B,iBAdM,cAiBXH,GAAiB,SAAA5B,GAAK,kCAASA,GAAT,IAAgByB,SAAS,QAjBpC,GAoBCP,cAAcnB,EAzBP,CAClB8B,kBAAkB,EAClBE,UAAW,KCEAG,4BAAgB,CAC7BC,WACAf,cACAgB,OACAC,cAAeC,I,mCCkMPC,G,WAkDOC,G,WAyBQC,GA3EzB,SAAUF,EAAYG,GAAtB,yEACmB,OADnB,SACyBC,aAAO,SAAA3C,GAAK,OAAIA,EAAMoC,KAAKb,UADpD,cACUA,EADV,OAEQqB,EAAeF,GAAUG,MAAMC,QAAQJ,IAAWA,EAAOzB,QAAO,SAACb,GAAD,OAAWA,EAAMA,SAAOW,KAAI,SAACX,GAC7F,IAAME,EAAUF,EAAME,QAAQG,MAAM,KAC9BsC,EAAQ,uCACM3C,EAAMC,UADZ,iRAUWD,EAAMM,QAVjB,8KAiBKJ,EAAQ,GAjBb,YAiBmBA,EAAQ,GAjB3B,YAiBiCA,EAAQ,GAjBzC,kCAoBf,OAAO0C,MAAM,WAAD,OAAYzB,EAAZ,6BAAuCnB,EAAMA,MAA7C,YAA8D,CACzE6C,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMJ,IAELK,MAAK,SAAAC,GAIF,OAAOA,EAASC,UAEnBF,MAAK,SAAAhI,GAEF,MAAO,CAAEgF,MAAMA,EAAMA,MAAOhF,WAE/BmI,OAAM,SAAAC,GACH,MAAO,CAAEpD,MAAMA,EAAMA,MAAOhF,KAAK,GAAIoG,MAAMgC,SA3CvD,kBA+CWZ,GA/CX,uCAkDO,SAAUJ,EAAY5B,GAAtB,yEAEH,OAFG,kBAEG6C,YAAI7B,KAFP,OAGH,OAHG,SAGG6B,YAAInC,EAAS,CAACE,MAAM,MAHvB,OAIc,OAJd,SAIoBxF,YAAKuG,EAAa3B,EAAOC,SAJ7C,OAMU,OAFP6C,EAJH,OAKH1B,QAAQC,IAAI,YAAYyB,GALrB,UAMgBC,QAAQC,WAAWF,GACrCN,MAAK,SAAAS,GAEF,OADA7B,QAAQC,IAAI,mBAAoB4B,GACzBA,KAEVN,OAAM,SAAAC,GACH,OAAOA,KAZR,QAeH,OATMpI,EANH,OAcH4G,QAAQC,IAAI,cAAc7G,GAdvB,UAeGqI,YAAI9B,EAAgB,CAACI,UAAW3G,KAfnC,QAgBH,OAhBG,UAgBGqI,YAAI/B,EAAc,CAACI,YAAW,KAhBjC,gCAkBH,OAlBG,oCAkBG2B,YAAI/B,EAAc,CAACI,YAAW,KAlBjC,QAoBH,OApBG,UAoBG2B,YAAInC,EAAS,CAACE,MAAM,kEApBvB,QAqBHQ,QAAQC,IAAI,gBAAZ,MArBG,sDAyBQ,SAAUQ,IAAV,iEACb,OADa,SACPqB,YAAI,CAACC,YAAWtC,EAAUe,KADnB,uC,gBCrRLwB,IAAV,SAAUA,KAAV,iEACE,OADF,SACQF,YAAI,CAACrB,MADb,wCAIeuB,U,SCMTC,GAAiBC,cACjBC,GAAa,CAACF,IACdG,GAAY,GAEdD,GAAWvI,OAAS,GACtBwI,GAAUlI,KAAKmI,kBAAe,WAAf,EAAmBF,KAKpC,IAAMG,GAAQC,sBAAYC,EAAaC,uBAAmB,WAAnB,EAAuBL,KAE9DH,GAAeS,IAAIV,GAAUM,GAAMK,UAEpBL,U,gBCvBA,YAAAM,GACb,IAAMD,EAAWE,cAUjB,OACE,qCACE,wBACEC,YAAaF,EAAME,YACnBtH,KAAMoH,EAAMpH,KACZuH,SAdgB,SAAAC,GACpBL,EAAS,CACPM,KAAM5F,EACNwB,QAAS,CACP5C,MAAO+G,EAAEE,OAAOjH,MAChBT,KAAMoH,EAAMpH,SAUZ2H,UAAU,oBChBH,cACb,IAAMR,EAAWE,cACjB,OACE,uBAAKM,UAAU,cAAf,UACE,eAACC,GAAD,CAAQ5H,KAAK,gBAAgBsH,YAAY,4BACzC,yBAAQK,UAAU,UAAUE,QAAS,kBAAMV,EAAS,CAAEM,KAAM/F,KAA5D,yBCNS,SAASoG,KACpB,IAAMlE,EAAcmE,aAAY,SAAAvF,GAAK,OAAIA,EAAMoB,eACzCuD,EAAWE,cAMjB,OACI,uBAAKM,UAAU,uBAAf,UACI,wBAAOF,KAAK,WAAW/E,GAAG,cAAcjC,MAAOmD,EAAa2D,SAP1C,WACtBJ,EAAS,CACLM,KAAKhG,OAKqF,wBAAOuG,QAAQ,cAAf,6B,aCRtG,IAuJeC,GAvJM,SAACb,GAClB,IAoGIc,EApGJ,EAAgDC,mBAAS,GAAzD,oBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAsDF,mBAAS,IAA/D,oBAAOG,EAAP,KAA4BC,EAA5B,KACA,EAA8CJ,oBAAS,GAAvD,oBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAAkCN,mBAASf,EAAM3G,OAAjD,oBAAOiI,EAAP,KAAkBC,EAAlB,KACM/E,EAAcmE,aAAY,SAAAvF,GAAK,uBAAIA,EAAMoB,mBAAV,aAAI,EAAmBA,eACtDG,EAASgE,aAAY,SAAAvF,GAAK,uBAAIA,EAAMoC,YAAV,aAAI,EAAYb,UAC1CoD,EAAWE,cAEXuB,EAAY,SAACC,GACfrE,QAAQC,IAAI,SAASoE,EAAO9E,GAC5B,MCjBgC,SAACA,EAAQ8E,GAC7C,MAAO,CACHC,IAAG,kBAAc/E,EAAd,0CAAsD8E,GACzDE,OAAQ,CACJtD,OAAQ,MACRC,QAAS,CACL,OAAU,sBDWIsD,CAAyBjF,EAAQ8E,GAAhDC,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,OACZF,GAASrD,MAAMsD,EAAKC,GACfnD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAhI,GAAS,IAAD,MACV4G,QAAQC,IAAI,QAAQ7G,EAAMmG,GAC1B,IAAMkF,GAAe,OAAJrL,QAAI,IAAJA,GAAA,UAAAA,EAAMsL,gBAAN,mBAAiB,UAAjB,eAAqBhE,OAAO9G,QAAO,EAAnC,UAAuCR,EAAKsL,gBAA5C,aAAuC,EAAgB,GAAGhE,OAAS,GAEpFqD,EAAuBU,GACvBZ,EAAoB,GACpBI,GAAmB,MAEtB1C,OAAM,SAAAC,GACHxB,QAAQR,MAAMgC,GACduC,EAAuB,IACvBE,GAAmB,OAIzBU,EAAiBC,mBAAQ,WAC3B,OEpCD,SAA0BC,GAAqB,IAC9CC,EAD6C,OAAdC,EAAc,uDAAJ,IAE7C,OAAO,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAClBF,GAAOG,aAAaH,GACpBA,EAAQI,YAAW,WACjBL,EAAKtK,MAAM,EAAMyK,KAChBD,IF8BMI,CAAiBf,EAAW,OACpC,IAEGgB,EAAiB,SAAChH,GACjBgB,GACCuD,EAAS,CACLM,KAAM9F,EACN0B,QAAS,CACPX,GAAI0E,EAAM1E,GACV1C,KAAM,UACNS,MAAO,mBAAmBmC,MA+FxC,OAhCI4F,GAAmBE,IAEnBR,EADEI,EAAoBlK,OAEpB,qBAAIuJ,UAAU,cAAd,SACGW,EAAoB/E,KAAI,SAACsG,EAAYC,GACpC,IAAInC,EAOJ,OAJImC,IAAU1B,IACZT,EAAY,qBAIZ,sBAAIA,UAAWA,EAA+BE,QAAS,SAACL,GAAD,OAxDnD5E,EAwDgEiH,EAAW9I,IAvDvFsH,EAAoB,GACpBE,EAAuB,IACvBE,GAAmB,GACnBE,EAAa/F,GACbuE,EAAS,CACLM,KAAM9F,EACN0B,QAAS,CACPX,GAAI0E,EAAM1E,GACV1C,KAAMoH,EAAMpH,KACZS,MAAOmC,UAGbgH,EAAehH,GAbH,IAAAA,GAwDJ,UACE,uBAAK+E,UAAU,eAAf,UACM,sBAAKoC,IAAG,uCAAkCF,EAAWG,OACrD,gCAAOH,EAAW9I,SAExB,+BAAM8I,EAAWI,gBALYJ,EAAWnH,SAahD,sBAAKiF,UAAU,aAAf,SACE,gEAMJ,uCACI,wBACIF,KAAK,OACLzH,KAAMoH,EAAMpH,KACZuH,SA9FK,SAAAC,GACb,IAAMkB,EAAYlB,EAAE0C,cAAczJ,MAClC0I,EAAeT,GACfC,EAAaD,GACbvB,EAAS,CACLM,KAAM9F,EACN0B,QAAS,CACPX,GAAI0E,EAAM1E,GACV1C,KAAMoH,EAAMpH,KACZS,MAAOiI,KAGbkB,EAAelB,IAmFPjI,MAAOiI,EACPyB,aAAa,MACbxC,UAAU,cACVL,YAAY,QACZ8C,UArEM,SAAA5C,GAEd,GAAkB,KAAdA,EAAE6C,QACFhC,EAAoB,GACpBI,GAAmB,GACnBjE,QAAQC,IAAI,SAAS2D,EAAkBE,GACvCK,EAAaL,EAAoBF,GAAkBrH,UAGlD,GAAkB,KAAdyG,EAAE6C,QAAgB,CACzB,GAAyB,IAArBjC,EACF,OAEFC,EAAoBD,EAAmB,QAGpC,GAAkB,KAAdZ,EAAE6C,QAAgB,CACzB,GAAIjC,EAAmB,IAAME,EAAoBlK,OAAO,EACtD,OAEFiK,EAAoBD,EAAkB,GACtC5D,QAAQC,IAAI2D,OAkDTF,MG3EEoC,GAxEC,WACd,IAAMhI,EAAeyF,aAAY,SAAAvF,GAAK,aAAS,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOmC,gBAAP,eAAiBrC,eAAgB,MACrEH,EAAW4F,aAAY,SAAAvF,GAAK,aAAS,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOmC,gBAAP,eAAiBxC,WAAY,MAC7DgF,EAAWE,cACXkD,EAAiB,SAAC/C,EAAG9E,GACzByE,EAAS,CACPM,KAAM9F,EACN0B,QAAS,CACPX,KACA1C,KAAMwH,EAAEE,OAAO1H,KACfS,MAAO+G,EAAEE,OAAOjH,UAWtB,OACE,uBAAKkH,UAAU,iBAAf,UACE,uBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,cAAf,mBACA,sBAAKA,UAAU,kBAAf,wBACA,sBAAKA,UAAU,gBAAf,kBACA,sBAAKA,UAAU,iBAAf,wBAEDrF,EAAalE,OAAS,GACrBkE,EACGmB,QAAO,SAAAD,GACN,MAAuB,KAAnBrB,EAAS1B,OACW,kBAAlB0B,EAASnC,KACJwD,EAAIZ,MAAM4H,SAASrI,EAAS1B,QAAU+C,EAAIN,QAAQsH,SAASrI,EAAS1B,OAGxE+C,KAERD,KAAI,SAAAC,GACH,OACE,uBAAkBiH,MAAO,CAAEC,QAAS,QAAU/C,UAAU,SAAxD,UACE,eAAC,GAAD,CAAc3H,KAAK,QAAQS,MAAO+C,EAAIZ,MAAOF,GAAIc,EAAId,KACrD,wBACE1C,KAAK,YACL2H,UAAU,kBACVL,YAAY,eACZ7G,MAAO+C,EAAIX,UACX0E,SAAU,SAACC,GAAD,OAAM+C,EAAe/C,EAAGhE,EAAId,OAExC,wBACE1C,KAAK,UACL2H,UAAU,gBACVF,KAAK,OACLhH,MAAO+C,EAAIV,QACXyE,SAAU,SAACC,GAAD,OAAM+C,EAAe/C,EAAGhE,EAAId,OAExC,wBACE1C,KAAK,UACL2H,UAAU,iBACVL,YAAY,UACZ7G,MAAO+C,EAAIN,QACXqE,SAAU,SAACC,GAAD,OAAM+C,EAAe/C,EAAGhE,EAAId,OAExC,yBAAQiF,UAAU,UAAUE,QAAS,kBAlDpCnF,EAkDiDc,EAAId,QAjDlEyE,EAAS,CACPM,KAAM7F,EACNyB,QAAS,CAAEX,QAHA,IAAAA,GAkDD,iBAvBQc,EAAId,WC7Cb,SAASiI,GAAT,GAAwD,IAAvChD,EAAsC,EAAtCA,UAAWiD,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,WACrD,OACI,yBAAQpD,KAAK,SAASE,UAAWA,EAAWE,QAAS+C,EAArD,SAAoEC,ICC7D,SAASC,KACpB,IAAM3D,EAAWE,cACX/E,EAAeyF,aAAY,SAAAvF,GAAK,OAAIA,EAAMmC,SAASrC,gBACnD+B,EAAmB0D,aAAY,SAAAvF,GAAK,aAAS,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOqC,qBAAP,eAAsBR,oBAAoB,KAClF0G,EAAazI,EAAamB,QAAO,SAACb,GAAD,OAAWA,EAAMA,SAIxD,OACI,qCAEQyB,EAAmB,sBAAKsD,UAAU,iBAAf,4BACjB,eAACgD,GAAD,CAAQhD,UAAU,eAAeiD,aAPhC,WACXzD,EAASlD,EAAS8G,KAM+CF,WAAW,qBCbrE,SAASG,KACpB,IAAMhH,EAAQ+D,aAAY,SAAAvF,GAAK,OAAIA,EAAMoC,KAAKZ,SACxCmD,EAAWE,cAKjB,OACIrD,GACA,uBAAK2D,UAAU,QAAf,UACI,+BAAK,oBAAGsD,KAAK,IAAIpD,QAPJ,SAACL,GAClBA,EAAE0D,iBACF/D,EAASrD,EAAS,CAACE,MAAM,OAKhB,6BACL,6BAAIA,OCVD,SAASmH,KACpB,IAAM5G,EAAYwD,aAAY,SAAAvF,GAAK,aAAS,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOqC,qBAAP,eAAsBN,YAAa,MACpE4C,EAAWE,cAcjB,OACI,sBAAKM,UAAU,YAAf,SAEIpD,EAAUnG,OAAQ,EAClB,uCACI,uDACA,qBAAIuJ,UAAU,aAAd,SACKpD,EAAUhB,KAAI,SAAC6H,EAAIlN,GAAK,IAAD,MACpB,EAAsBkN,EAAI3K,MAAnBmC,EAAP,EAAOA,MAAOhF,EAAd,EAAcA,KACd,OACI,gCACI,kCAAOgF,EAAP,QAEQ,OAAJhF,QAAI,IAAJA,OAAA,EAAAA,EAAMyN,SAAQ,OAACzN,QAAD,IAACA,OAAD,EAACA,EAAM0N,eACrB,uBAAKb,MAAO,CAACc,WAAW,OAAxB,UACI,mDAAoB,kCAAS3N,EAAKiF,eAClC,+CAAgB,mCAAa,OAAJjF,QAAI,IAAJA,OAAA,EAAAA,EAAM4N,SAAN,UAAe5N,EAAK4N,eAApB,iBAAe,EAAcvI,MAAM,YAAnC,aAAe,EAA2B,GAAK,QACvE,MAEG,OAAJrF,QAAI,IAAJA,OAAA,EAAAA,EAAMyN,OAAQ,yBAAQ1D,UAAU,YAAYE,QAAS,kBAhCnEiB,EAgCsFlL,EAAKyN,KAhCtFvB,EAgC4F5L,EA/BnHsG,QAAQC,IAAIqE,EAAIgB,QAChBtE,MAAM,GAAD,OAAIsD,GAAO,CAAErD,OAAQ,WACzBG,MAAK,SAAAC,GACF,OAAOA,EAAS4F,UAEnB7F,MAAK,SAAA6F,GAEF,IAAIC,EAAUnH,EAAUd,QAAO,SAACjE,EAAEtB,GAAH,OAAQA,IAAI4L,KAC3C3C,EAAShD,EAAgB,CAACI,UAAWmH,QAExC3F,OAAM,SAAAC,GAAG,OAAIxB,QAAQR,MAAMgC,MAXX,IAAC8C,EAAKgB,GAgCuB,2BAGd,wBAAMW,MAAO,CAACkB,MAAM,MAAOJ,WAAW,OAAtC,wBAAgD3N,EAAK0N,qBAArD,aAAgD,EAAoBM,KAAK,UAZ5E1N,WAmBtB,eAAC8M,GAAD,MChDA,SAASa,KACpB,OACI,kCACI,+DCOZ,IAwBeC,GAxBH,WACV,IAAM3E,EAAWE,cAYjB,OAXA0E,qBAAU,WAERC,OAAOC,MAAQD,OAAOC,KAAKpD,MADT,CAACqD,QAAQ,EAAMC,mBAAmB,IACR,SAAAF,GACxC,IAAMnD,EAAMmD,EAAK,GAAGnD,IACpBtE,QAAQC,IAAIqE,GACZ3B,EAAS,CACPM,KAAM3F,EACNuB,QAAS,CAACU,OAAO+E,EAAI7F,MAAM,KAAK,WAGrC,IAED,uBAAK0E,UAAU,MAAf,UACE,eAACyE,GAAD,IACA,eAACtE,GAAD,IACA,eAAC,GAAD,IACA,eAACgD,GAAD,IACA,eAACK,GAAD,IACA,eAACU,GAAD,QCvBAQ,GAAcC,SAASC,eAAe,QAE5CC,IAASC,OACP,eAAC,IAAD,CAAU3F,MAAOA,GAAjB,SAEE,eAAC,GAAD,MAGFuF","file":"static/js/main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = this[\"webpackJsonpjira-work-log-extension\"] = this[\"webpackJsonpjira-work-log-extension\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([27,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const TOGGLE_AUTO_COMMENT = 'TOGGLE_AUTO_COMMENT';\r\nexport const ADD_NEW_ROW = 'ADD_NEW_ROW';\r\nexport const EDIT_ACTION = 'EDIT_ACTION';\r\nexport const DELETE_ROW = 'DELETE_ROW';\r\nexport const FILTER_BY = 'FILTER_BY';\r\nexport const RESET_STORE = 'RESET_STORE';\r\nexport const SAVE_DOMAIN = 'SAVE_DOMAIN';\r\nexport const SAVE_LOGS = 'SAVE_LOGS';\r\nexport const SAVE_STATUS = 'SAVE_STATUS';\r\nexport const UPDATE_SAVED_LOGS = 'UPDATE_SAVED_LOGS';\r\nexport const RESET_SAVED_LOGS = 'RESET_SAVED_LOGS';\r\nexport const PUT_ERROR = 'PUT_ERROR';\r\n","import { createAction } from 'redux-actions';\r\nimport { ADD_NEW_ROW, DELETE_ROW, EDIT_ACTION, FILTER_BY, RESET_STORE } from '../../constants';\r\n\r\nexport const addNewRow = createAction(ADD_NEW_ROW);\r\nexport const onEditIssue = createAction(EDIT_ACTION);\r\nexport const delRow = createAction(DELETE_ROW);\r\nexport const filterBy = createAction(FILTER_BY);\r\n\r\nexport const resetStore = createAction(RESET_STORE);\r\n","import { handleActions } from 'redux-actions';\r\nimport { addNewRow, onEditIssue, delRow, resetStore, filterBy } from './action';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst DEFAULT_STATE = {\r\n  workLogItems: [],\r\n  filterBy: {}\r\n};\r\n\r\nconst handlers = {\r\n  [addNewRow]: state => {\r\n    const newRow = {\r\n      id: nanoid(),\r\n      issue: '',\r\n      timeSpent: '',\r\n      logDate: `${new Date().toISOString().split('T')[0]}`,\r\n      comment: ''\r\n    };\r\n    const newWorkLog = state.workLogItems?.slice() || [];\r\n    newWorkLog.push(newRow);\r\n    return {\r\n      ...state,\r\n      workLogItems: newWorkLog\r\n    };\r\n  },\r\n  [onEditIssue]: (state, action) => {\r\n    const { id, value, name } = action.payload;\r\n    const updateWorkLog = state.workLogItems.map(row => {\r\n      if (row.id === id) {\r\n        if (name === 'issue') {\r\n          row.issue = value;\r\n        } else if (name === 'timeSpent') {\r\n          row.timeSpent = value;\r\n        } else if (name === 'comment') {\r\n          row.comment = value;\r\n        } else if(name === 'logDate'){\r\n          row.logDate = value;\r\n        }\r\n      }\r\n      return row;\r\n    });\r\n    return {\r\n      ...state,\r\n      workLogItems: updateWorkLog\r\n    };\r\n  },\r\n  [delRow]: (state, action) => {\r\n    const { id } = action.payload;\r\n    const updateWorkLog = state.workLogItems.filter(row => row.id !== id);\r\n    return {\r\n      ...state,\r\n      workLogItems: updateWorkLog\r\n    };\r\n  },\r\n  [filterBy]: (state, action) => {\r\n    const { value, name } = action.payload;\r\n    return {\r\n      ...state,\r\n      filterBy: { value, name }\r\n    };\r\n  },\r\n  [resetStore]: () => {\r\n    return {\r\n      ...DEFAULT_STATE\r\n    };\r\n  }\r\n};\r\n\r\nexport default handleActions(handlers, DEFAULT_STATE);\r\n","import { createAction } from 'redux-actions';\r\nimport { TOGGLE_AUTO_COMMENT } from '../../constants';\r\n\r\nexport const toggleAutoComment = createAction(TOGGLE_AUTO_COMMENT);","import { handleActions } from 'redux-actions';\r\nimport { toggleAutoComment } from './actions';\r\n\r\nconst DEFAULT_STATE = {\r\n    autoComment: false\r\n};\r\n\r\nconst handlers = {\r\n  [toggleAutoComment]: state => {  \r\n    return {\r\n      ...state,\r\n      autoComment : !state.autoComment\r\n    };\r\n  },\r\n};\r\n\r\nexport default handleActions(handlers, DEFAULT_STATE);\r\n","import { createAction } from 'redux-actions';\r\nimport { PUT_ERROR, SAVE_DOMAIN } from '../../constants';\r\n\r\nexport const saveDomain = createAction(SAVE_DOMAIN);\r\nexport const putError = createAction(PUT_ERROR);","import { handleActions } from 'redux-actions';\r\nimport { putError, saveDomain } from './action';\r\n\r\nconst DEFAULT_STATE = {\r\n    domain: '',\r\n    error: ''\r\n};\r\n\r\nconst handlers = {\r\n  [saveDomain]: (state, action) => {  \r\n    const { domain } = action.payload;\r\n    return {\r\n      ...state,\r\n      domain : domain\r\n    };\r\n  },\r\n  [putError]: (state, action) => {\r\n      const {error} = action.payload;\r\n      return {\r\n        ...state,\r\n        error,\r\n      }\r\n  }\r\n};\r\n\r\nexport default handleActions(handlers, DEFAULT_STATE);","import { createAction } from 'redux-actions';\r\nimport { SAVE_LOGS, SAVE_STATUS, UPDATE_SAVED_LOGS, RESET_SAVED_LOGS } from '../../constants';\r\n\r\nexport const saveLogs = createAction(SAVE_LOGS);\r\nexport const setSaveStatus = createAction(SAVE_STATUS);\r\nexport const updateSavedLogs = createAction(UPDATE_SAVED_LOGS);\r\nexport const resetSavedLogs = createAction(RESET_SAVED_LOGS);\r\n\r\n","import { handleActions } from 'redux-actions';\r\nimport { resetSavedLogs, saveLogs, setSaveStatus, updateSavedLogs } from './action';\r\n\r\nconst DEFAULT_STATE = {\r\n    savingInProgress: false,\r\n    savedLogs: []\r\n};\r\n\r\nconst handlers = {\r\n  [saveLogs]: state => ({ ...state, savingInProgress: true }),\r\n  [setSaveStatus]: (state, action) => {\r\n    const {inProgress} = action.payload;\r\n    return {\r\n        ...state,\r\n        savingInProgress: inProgress\r\n    }\r\n  },\r\n  [updateSavedLogs]: (state, action) => {\r\n    const {savedLogs} = action.payload;\r\n    console.log('updateSavedLogs',savedLogs);\r\n    return {\r\n        ...state,\r\n        savedLogs,\r\n    }\r\n  },\r\n  [resetSavedLogs]: state => ({...state, saveLogs:[]})\r\n};\r\n\r\nexport default handleActions(handlers, DEFAULT_STATE);\r\n\r\n/*\r\n{\"self\":\"https://irfangg.atlassian.net/rest/api/3/issue/10011/worklog/10083\",\"author\":{\"self\":\"https://irfangg.atlassian.net/rest/api/3/user?accountId=60ce033ea1746300706619d6\",\"accountId\":\"60ce033ea1746300706619d6\",\"emailAddress\":\"irfangg.contact@gmail.com\",\"avatarUrls\":{\"48x48\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\"24x24\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\"16x16\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\"32x32\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\"},\"displayName\":\"Irfan GG\",\"active\":true,\"timeZone\":\"Asia/Calcutta\",\"accountType\":\"atlassian\"},\"updateAuthor\":{\"self\":\"https://irfangg.atlassian.net/rest/api/3/user?accountId=60ce033ea1746300706619d6\",\"accountId\":\"60ce033ea1746300706619d6\",\"emailAddress\":\"irfangg.contact@gmail.com\",\"avatarUrls\":{\"48x48\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\"24x24\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\"16x16\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\"32x32\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\"},\"displayName\":\"Irfan GG\",\"active\":true,\"timeZone\":\"Asia/Calcutta\",\"accountType\":\"atlassian\"},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"text\":\"worked on issue BTD-12\",\"type\":\"text\"}]}]},\"created\":\"2021-07-10T16:14:39.549+0530\",\"updated\":\"2021-07-10T16:14:39.549+0530\",\"started\":\"2021-07-10T23:30:00.751+0530\",\"timeSpent\":\"3h\",\"timeSpentSeconds\":10800,\"id\":\"10083\",\"issueId\":\"10011\"}\r\n{\"self\":\"https://irfangg.atlassian.net/rest/api/3/issue/10012/worklog/10084\",\"author\":{\"self\":\"https://irfangg.atlassian.net/rest/api/3/user?accountId=60ce033ea1746300706619d6\",\"accountId\":\"60ce033ea1746300706619d6\",\"emailAddress\":\"irfangg.contact@gmail.com\",\"avatarUrls\":{\"48x48\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\"24x24\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\"16x16\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\"32x32\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\"},\"displayName\":\"Irfan GG\",\"active\":true,\"timeZone\":\"Asia/Calcutta\",\"accountType\":\"atlassian\"},\"updateAuthor\":{\"self\":\"https://irfangg.atlassian.net/rest/api/3/user?accountId=60ce033ea1746300706619d6\",\"accountId\":\"60ce033ea1746300706619d6\",\"emailAddress\":\"irfangg.contact@gmail.com\",\"avatarUrls\":{\"48x48\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\"24x24\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\"16x16\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\"32x32\":\"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\"},\"displayName\":\"Irfan GG\",\"active\":true,\"timeZone\":\"Asia/Calcutta\",\"accountType\":\"atlassian\"},\"comment\":{\"type\":\"doc\",\"version\":1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"text\":\"worked on issue BTD-13\",\"type\":\"text\"}]}]},\"created\":\"2021-07-10T16:14:39.550+0530\",\"updated\":\"2021-07-10T16:14:39.550+0530\",\"started\":\"2021-07-10T23:30:00.751+0530\",\"timeSpent\":\"1m\",\"timeSpentSeconds\":60,\"id\":\"10084\",\"issueId\":\"10012\"}\r\n*/\r\n/*\r\n{\"errorMessages\":[\"Worklog must not be null.\"],\"errors\":{\"timeLogged\":\"Invalid time duration entered.\"}}\r\n*/\r\n/*\r\n[\r\n    {\r\n        \"status\": \"fulfilled\",\r\n        \"value\": {\r\n            \"issue\": \"BTD-12\",\r\n            \"data\": {\r\n                \"self\": \"https://irfangg.atlassian.net/rest/api/3/issue/10011/worklog/10083\",\r\n                \"author\": {\r\n                    \"self\": \"https://irfangg.atlassian.net/rest/api/3/user?accountId=60ce033ea1746300706619d6\",\r\n                    \"accountId\": \"60ce033ea1746300706619d6\",\r\n                    \"emailAddress\": \"irfangg.contact@gmail.com\",\r\n                    \"avatarUrls\": {\r\n                        \"48x48\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"24x24\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"16x16\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"32x32\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\"\r\n                    },\r\n                    \"displayName\": \"Irfan GG\",\r\n                    \"active\": true,\r\n                    \"timeZone\": \"Asia/Calcutta\",\r\n                    \"accountType\": \"atlassian\"\r\n                },\r\n                \"updateAuthor\": {\r\n                    \"self\": \"https://irfangg.atlassian.net/rest/api/3/user?accountId=60ce033ea1746300706619d6\",\r\n                    \"accountId\": \"60ce033ea1746300706619d6\",\r\n                    \"emailAddress\": \"irfangg.contact@gmail.com\",\r\n                    \"avatarUrls\": {\r\n                        \"48x48\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"24x24\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"16x16\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"32x32\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\"\r\n                    },\r\n                    \"displayName\": \"Irfan GG\",\r\n                    \"active\": true,\r\n                    \"timeZone\": \"Asia/Calcutta\",\r\n                    \"accountType\": \"atlassian\"\r\n                },\r\n                \"comment\": {\r\n                    \"type\": \"doc\",\r\n                    \"version\": 1,\r\n                    \"content\": [\r\n                        {\r\n                            \"type\": \"paragraph\",\r\n                            \"content\": [\r\n                                {\r\n                                    \"text\": \"worked on issue BTD-12\",\r\n                                    \"type\": \"text\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                \"created\": \"2021-07-10T16:14:39.549+0530\",\r\n                \"updated\": \"2021-07-10T16:14:39.549+0530\",\r\n                \"started\": \"2021-07-10T23:30:00.751+0530\",\r\n                \"timeSpent\": \"3h\",\r\n                \"timeSpentSeconds\": 10800,\r\n                \"id\": \"10083\",\r\n                \"issueId\": \"10011\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"status\": \"fulfilled\",\r\n        \"value\": {\r\n            \"issue\": \"BTD-13\",\r\n            \"data\": {\r\n                \"self\": \"https://irfangg.atlassian.net/rest/api/3/issue/10012/worklog/10084\",\r\n                \"author\": {\r\n                    \"self\": \"https://irfangg.atlassian.net/rest/api/3/user?accountId=60ce033ea1746300706619d6\",\r\n                    \"accountId\": \"60ce033ea1746300706619d6\",\r\n                    \"emailAddress\": \"irfangg.contact@gmail.com\",\r\n                    \"avatarUrls\": {\r\n                        \"48x48\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"24x24\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"16x16\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"32x32\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\"\r\n                    },\r\n                    \"displayName\": \"Irfan GG\",\r\n                    \"active\": true,\r\n                    \"timeZone\": \"Asia/Calcutta\",\r\n                    \"accountType\": \"atlassian\"\r\n                },\r\n                \"updateAuthor\": {\r\n                    \"self\": \"https://irfangg.atlassian.net/rest/api/3/user?accountId=60ce033ea1746300706619d6\",\r\n                    \"accountId\": \"60ce033ea1746300706619d6\",\r\n                    \"emailAddress\": \"irfangg.contact@gmail.com\",\r\n                    \"avatarUrls\": {\r\n                        \"48x48\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"24x24\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"16x16\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"32x32\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\"\r\n                    },\r\n                    \"displayName\": \"Irfan GG\",\r\n                    \"active\": true,\r\n                    \"timeZone\": \"Asia/Calcutta\",\r\n                    \"accountType\": \"atlassian\"\r\n                },\r\n                \"comment\": {\r\n                    \"type\": \"doc\",\r\n                    \"version\": 1,\r\n                    \"content\": [\r\n                        {\r\n                            \"type\": \"paragraph\",\r\n                            \"content\": [\r\n                                {\r\n                                    \"text\": \"worked on issue BTD-13\",\r\n                                    \"type\": \"text\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                \"created\": \"2021-07-10T16:14:39.550+0530\",\r\n                \"updated\": \"2021-07-10T16:14:39.550+0530\",\r\n                \"started\": \"2021-07-10T23:30:00.751+0530\",\r\n                \"timeSpent\": \"1m\",\r\n                \"timeSpentSeconds\": 60,\r\n                \"id\": \"10084\",\r\n                \"issueId\": \"10012\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"status\": \"fulfilled\",\r\n        \"value\": {\r\n            \"issue\": \"BTD-10\",\r\n            \"data\": {\r\n                \"errorMessages\": [\r\n                    \"Worklog must not be null.\"\r\n                ],\r\n                \"errors\": {\r\n                    \"timeLogged\": \"Invalid time duration entered.\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"status\": \"fulfilled\",\r\n        \"value\": {\r\n            \"issue\": \"BTD-2\",\r\n            \"data\": {\r\n                \"errorMessages\": [\r\n                    \"Worklog must not be null.\"\r\n                ],\r\n                \"errors\": {\r\n                    \"timeLogged\": \"You must indicate the time spent working.\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"status\": \"fulfilled\",\r\n        \"value\": {\r\n            \"issue\": \"BTD-1\",\r\n            \"data\": {\r\n                \"errorMessages\": [\r\n                    \"Worklog must not be null.\"\r\n                ],\r\n                \"errors\": {\r\n                    \"timeLogged\": \"You must indicate the time spent working.\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n]\r\n*/","import { combineReducers } from 'redux';\r\n// import postsReducer from './posts/reducer';\r\nimport worklogs from './workLog/reducer';\r\nimport autoComment from './autocomment/reducer';\r\nimport home from './home/reducer';\r\nimport saveReducer from './save/reducer';\r\n\r\nexport default combineReducers({\r\n  worklogs,\r\n  autoComment,\r\n  home,\r\n  loggedDetails: saveReducer\r\n});\r\n","import { all, takeLatest, call, put, select, delay } from 'redux-saga/effects';\r\nimport { putError } from '../home/action';\r\n\r\nimport { resetSavedLogs, saveLogs, setSaveStatus, updateSavedLogs } from './action';\r\nconst savedLogs = [\r\n    {\r\n        \"status\": \"fulfilled\",\r\n        \"value\": {\r\n            \"issue\": \"BTD-12\",\r\n            \"data\": {\r\n                \"self\": \"https://irfangg.atlassian.net/rest/api/3/issue/10011/worklog/10085\",\r\n                \"author\": {\r\n                    \"self\": \"https://irfangg.atlassian.net/rest/api/3/user?accountId=60ce033ea1746300706619d6\",\r\n                    \"accountId\": \"60ce033ea1746300706619d6\",\r\n                    \"emailAddress\": \"irfangg.contact@gmail.com\",\r\n                    \"avatarUrls\": {\r\n                        \"48x48\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"24x24\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"16x16\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"32x32\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\"\r\n                    },\r\n                    \"displayName\": \"Irfan GG\",\r\n                    \"active\": true,\r\n                    \"timeZone\": \"Asia/Calcutta\",\r\n                    \"accountType\": \"atlassian\"\r\n                },\r\n                \"updateAuthor\": {\r\n                    \"self\": \"https://irfangg.atlassian.net/rest/api/3/user?accountId=60ce033ea1746300706619d6\",\r\n                    \"accountId\": \"60ce033ea1746300706619d6\",\r\n                    \"emailAddress\": \"irfangg.contact@gmail.com\",\r\n                    \"avatarUrls\": {\r\n                        \"48x48\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"24x24\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"16x16\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"32x32\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\"\r\n                    },\r\n                    \"displayName\": \"Irfan GG\",\r\n                    \"active\": true,\r\n                    \"timeZone\": \"Asia/Calcutta\",\r\n                    \"accountType\": \"atlassian\"\r\n                },\r\n                \"comment\": {\r\n                    \"type\": \"doc\",\r\n                    \"version\": 1,\r\n                    \"content\": [\r\n                        {\r\n                            \"type\": \"paragraph\",\r\n                            \"content\": [\r\n                                {\r\n                                    \"text\": \"worked on issue BTD-12\",\r\n                                    \"type\": \"text\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                \"created\": \"2021-07-10T16:32:26.952+0530\",\r\n                \"updated\": \"2021-07-10T16:32:26.952+0530\",\r\n                \"started\": \"2021-07-10T23:30:00.751+0530\",\r\n                \"timeSpent\": \"3h\",\r\n                \"timeSpentSeconds\": 10800,\r\n                \"id\": \"10085\",\r\n                \"issueId\": \"10011\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"status\": \"fulfilled\",\r\n        \"value\": {\r\n            \"issue\": \"BTD-13\",\r\n            \"data\": {\r\n                \"self\": \"https://irfangg.atlassian.net/rest/api/3/issue/10012/worklog/10086\",\r\n                \"author\": {\r\n                    \"self\": \"https://irfangg.atlassian.net/rest/api/3/user?accountId=60ce033ea1746300706619d6\",\r\n                    \"accountId\": \"60ce033ea1746300706619d6\",\r\n                    \"emailAddress\": \"irfangg.contact@gmail.com\",\r\n                    \"avatarUrls\": {\r\n                        \"48x48\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"24x24\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"16x16\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"32x32\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\"\r\n                    },\r\n                    \"displayName\": \"Irfan GG\",\r\n                    \"active\": true,\r\n                    \"timeZone\": \"Asia/Calcutta\",\r\n                    \"accountType\": \"atlassian\"\r\n                },\r\n                \"updateAuthor\": {\r\n                    \"self\": \"https://irfangg.atlassian.net/rest/api/3/user?accountId=60ce033ea1746300706619d6\",\r\n                    \"accountId\": \"60ce033ea1746300706619d6\",\r\n                    \"emailAddress\": \"irfangg.contact@gmail.com\",\r\n                    \"avatarUrls\": {\r\n                        \"48x48\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"24x24\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"16x16\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\",\r\n                        \"32x32\": \"https://secure.gravatar.com/avatar/9755e0ae438d4f875f951624dd0ece2e?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FIG-3.png\"\r\n                    },\r\n                    \"displayName\": \"Irfan GG\",\r\n                    \"active\": true,\r\n                    \"timeZone\": \"Asia/Calcutta\",\r\n                    \"accountType\": \"atlassian\"\r\n                },\r\n                \"comment\": {\r\n                    \"type\": \"doc\",\r\n                    \"version\": 1,\r\n                    \"content\": [\r\n                        {\r\n                            \"type\": \"paragraph\",\r\n                            \"content\": [\r\n                                {\r\n                                    \"text\": \"worked on issue BTD-13\",\r\n                                    \"type\": \"text\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                \"created\": \"2021-07-10T16:32:26.959+0530\",\r\n                \"updated\": \"2021-07-10T16:32:26.959+0530\",\r\n                \"started\": \"2021-07-10T23:30:00.751+0530\",\r\n                \"timeSpent\": \"1m\",\r\n                \"timeSpentSeconds\": 60,\r\n                \"id\": \"10086\",\r\n                \"issueId\": \"10012\"\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"status\": \"fulfilled\",\r\n        \"value\": {\r\n            \"issue\": \"BTD-10\",\r\n            \"data\": {\r\n                \"errorMessages\": [\r\n                    \"Worklog must not be null.\"\r\n                ],\r\n                \"errors\": {\r\n                    \"timeLogged\": \"Invalid time duration entered.\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"status\": \"fulfilled\",\r\n        \"value\": {\r\n            \"issue\": \"BTD-2\",\r\n            \"data\": {\r\n                \"errorMessages\": [\r\n                    \"Worklog must not be null.\"\r\n                ],\r\n                \"errors\": {\r\n                    \"timeLogged\": \"You must indicate the time spent working.\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"status\": \"fulfilled\",\r\n        \"value\": {\r\n            \"issue\": \"Bjhg\",\r\n            \"data\": {\r\n                \"errorMessages\": [\r\n                    \"Issue does not exist or you do not have permission to see it.\"\r\n                ],\r\n                \"errors\": {}\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"status\": \"fulfilled\",\r\n        \"value\": {\r\n            \"issue\": \"Bjhg\",\r\n            \"data\": {\r\n                \"errorMessages\": [\r\n                    \"Issue does not exist or you do not have permission to see it.\"\r\n                ],\r\n                \"errors\": {}\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"status\": \"fulfilled\",\r\n        \"value\": {\r\n            \"issue\": \"Bjhg\",\r\n            \"data\": {\r\n                \"errorMessages\": [\r\n                    \"Issue does not exist or you do not have permission to see it.\"\r\n                ],\r\n                \"errors\": {}\r\n            }\r\n        }\r\n    },\r\n    {\r\n        \"status\": \"fulfilled\",\r\n        \"value\": {\r\n            \"issue\": \"Bjhg\",\r\n            \"data\": {\r\n                \"errorMessages\": [\r\n                    \"Issue does not exist or you do not have permission to see it.\"\r\n                ],\r\n                \"errors\": {}\r\n            }\r\n        }\r\n    }\r\n];\r\n\r\nfunction *postWorkLog(issues){\r\n    const domain = yield select(state => state.home.domain);\r\n    let promiseArray = issues && Array.isArray(issues) && issues.filter((issue) => issue.issue).map((issue)=>{\r\n        const logDate = issue.logDate.split('-');\r\n        const bodyData = `{\r\n            \"timeSpent\": \"${issue.timeSpent}\",\r\n            \"comment\": {\r\n              \"type\": \"doc\",\r\n              \"version\": 1,\r\n              \"content\": [\r\n                {\r\n                  \"type\": \"paragraph\",\r\n                  \"content\": [\r\n                    {\r\n                      \"text\": \"${issue.comment}\",\r\n                      \"type\": \"text\"\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            },\r\n            \"started\":  \"${logDate[0]}-${logDate[1]}-${logDate[2]}T18:00:00.751+0000\"\r\n        }`;\r\n\r\n       return fetch(`https://${domain}/rest/api/3/issue/${issue.issue}/worklog`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: bodyData\r\n        })\r\n        .then(response => {\r\n            // console.log(\r\n            // `Response: ${response.status}`\r\n            // );\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            //console.log(data, data?.self)\r\n            return { issue:issue.issue, data};\r\n        })\r\n        .catch(err => {\r\n            return { issue:issue.issue, data:'', error:err};\r\n        });\r\n    })\r\n\r\n    return promiseArray;\r\n}\r\n\r\nexport function* saveAllLogs(action) {\r\n  try {\r\n    yield put(resetSavedLogs());\r\n    yield put(putError({error:''}));\r\n    const promises = yield call(postWorkLog, action.payload);\r\n    console.log('promises ',promises);\r\n    const data = yield Promise.allSettled(promises)\r\n    .then(results => {\r\n        console.log('Promise results ', results)\r\n        return results;\r\n    })\r\n    .catch(err => {\r\n        return err;\r\n    })\r\n    console.log('final data ',data)\r\n    yield put(updateSavedLogs({savedLogs: data}));\r\n    yield put(setSaveStatus({inProgress:false}))\r\n  } catch (err) {\r\n    yield put(setSaveStatus({inProgress:false}))\r\n    //put some error\r\n    yield put(putError({error:'something went wrong, try submiting again with correct data.'}));\r\n    console.log('erro in saga ', err);\r\n  }\r\n}\r\n\r\nexport default function* saveLogsSaga() {\r\n  yield all([takeLatest(saveLogs, saveAllLogs)]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport saveLogsSaga from './save/saga';\r\n\r\nfunction* rootSaga() {\r\n  yield all([saveLogsSaga()]);\r\n}\r\n\r\nexport default rootSaga;  \r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\n// import { persistReducer } from 'redux-persist';\r\n// import LocalStorage from 'redux-persist/lib/storage';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// const persistConfig = {\r\n//   key: 'root',\r\n//   storage: LocalStorage\r\n// };\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [sagaMiddleware];\r\nconst enhancers = [];\r\n\r\nif (middleware.length > 0) {\r\n  enhancers.push(applyMiddleware(...middleware));\r\n}\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(...enhancers));\r\n\r\nsagaMiddleware.run(rootSaga, store.dispatch);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { FILTER_BY } from '../../constants';\r\n\r\nexport default props => {\r\n  const dispatch = useDispatch();\r\n  const onFilterIssue = e => {\r\n    dispatch({\r\n      type: FILTER_BY,\r\n      payload: {\r\n        value: e.target.value,\r\n        name: props.name\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        placeholder={props.placeholder}\r\n        name={props.name}\r\n        onChange={onFilterIssue}\r\n        className='class_search'\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ADD_NEW_ROW } from '../../constants';\r\nimport Filter from './Filter';\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className='searchOrAdd'>\r\n      <Filter name=\"filterByIssue\" placeholder=\"Filter by issue/comment\" />\r\n      <button className='btn-add' onClick={() => dispatch({ type: ADD_NEW_ROW })}>Add New</button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TOGGLE_AUTO_COMMENT } from '../constants';\r\n\r\nexport default function AutoComment() {\r\n    const autoComment = useSelector(state => state.autoComment);\r\n    const dispatch = useDispatch();\r\n    const handleAutoComment = () => {\r\n        dispatch({\r\n            type:TOGGLE_AUTO_COMMENT\r\n        })\r\n    }\r\n    return (\r\n        <div className='autoCommentContainer'>\r\n            <input type='checkbox' id='autoComment' value={autoComment} onChange={handleAutoComment}/><label htmlFor='autoComment' >Auto Comment</label>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useMemo} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { EDIT_ACTION } from '../constants';\r\nimport { getAutoSuggestURLDetails } from '../constants/endPoints';\r\nimport { debounce_loading } from '../utils';\r\n\r\nconst AutoComplete = (props)=> {\r\n    const [activeSuggestion, setActiveSuggestion] = useState(0);\r\n    const [filteredSuggestions, setFilteredSuggestions] = useState([]);\r\n    const [showSuggestions, setShowSuggestions] = useState(false);\r\n    const [userInput, setUserInput] = useState(props.value);\r\n    const autoComment = useSelector(state => state.autoComment?.autoComment)\r\n    const domain = useSelector(state => state.home?.domain)\r\n    const dispatch = useDispatch();\r\n\r\n    const fetchData = (query) => {\r\n        console.log('query ',query, domain)\r\n        const {url, header} = getAutoSuggestURLDetails(domain, query)\r\n        query && fetch(url, header)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('data ',data, domain)\r\n                const dataList = data?.sections?.[0]?.issues.length>0 ? data.sections?.[0].issues : [];\r\n                // console.log('dataList ', dataList)\r\n                setFilteredSuggestions(dataList)\r\n                setActiveSuggestion(0);\r\n                setShowSuggestions(true)\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                setFilteredSuggestions([])\r\n                setShowSuggestions(false)\r\n            });\r\n    }\r\n   \r\n    const processChanges = useMemo(() => {\r\n        return debounce_loading(fetchData, 300);\r\n    }, []);\r\n\r\n    const addAutoComment = (issue)=>{\r\n        if(autoComment){\r\n            dispatch({\r\n                type: EDIT_ACTION,\r\n                payload: {\r\n                  id: props.id,\r\n                  name: 'comment',\r\n                  value: 'worked on issue '+issue\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const onChange = e => {\r\n        const userInput = e.currentTarget.value;\r\n        processChanges(userInput)\r\n        setUserInput(userInput)\r\n        dispatch({\r\n            type: EDIT_ACTION,\r\n            payload: {\r\n              id: props.id,\r\n              name: props.name,\r\n              value: userInput\r\n            }\r\n        });\r\n        addAutoComment(userInput);\r\n    };\r\n    const onClick = issue => {\r\n        setActiveSuggestion(0);\r\n        setFilteredSuggestions([]);\r\n        setShowSuggestions(false);\r\n        setUserInput(issue);\r\n        dispatch({\r\n            type: EDIT_ACTION,\r\n            payload: {\r\n              id: props.id,\r\n              name: props.name,\r\n              value: issue\r\n            }\r\n        });\r\n        addAutoComment(issue);\r\n    };\r\n    \r\n    const onKeyDown = e => {\r\n        // User pressed the enter key\r\n        if (e.keyCode === 13) {\r\n            setActiveSuggestion(0);\r\n            setShowSuggestions(false);\r\n            console.log('enter ',activeSuggestion, filteredSuggestions);\r\n            setUserInput(filteredSuggestions[activeSuggestion].key);\r\n        }\r\n        // User pressed the up arrow\r\n        else if (e.keyCode === 38) {\r\n          if (activeSuggestion === 0) {\r\n            return;\r\n          }\r\n          setActiveSuggestion(activeSuggestion - 1);\r\n        }\r\n        // User pressed the down arrow\r\n        else if (e.keyCode === 40) {\r\n          if (activeSuggestion - 1 === filteredSuggestions.length-2) {\r\n            return;\r\n          }\r\n          setActiveSuggestion(activeSuggestion +1);\r\n          console.log(activeSuggestion)\r\n        }\r\n    };\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <ul className=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              // Flag the active suggestion with a class\r\n              if (index === activeSuggestion) {\r\n                className = \"suggestion-active\";\r\n              }\r\n\r\n              return (\r\n                <li className={className} key={suggestion.id} onClick={(e)=>onClick(suggestion.key)}>\r\n                  <div className='img-issue-id'>\r\n                        <img src={`https://irfangg.atlassian.net${suggestion.img}`}/>\r\n                        <span>{suggestion.key}</span>\r\n                  </div>\r\n                  <div>{suggestion.summaryText}</div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div className=\"no-options\">\r\n            <em>No matching issues found !</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"text\"\r\n                name={props.name}\r\n                onChange={onChange}\r\n                value={userInput}\r\n                autoComplete=\"off\"\r\n                className='class_issue'\r\n                placeholder='Issue'\r\n                onKeyDown={onKeyDown}\r\n            />\r\n            {suggestionsListComponent}\r\n        </>\r\n    )\r\n}\r\nexport default AutoComplete;","export const getAutoSuggestURLDetails = (domain, query) => {\r\n    return {\r\n        url : `https://${domain}/rest/api/3/issue/picker?query=${query}`,\r\n        header: {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const getWorkLogPostURL = (domain, issue) => {\r\n    return `https://${domain}/rest/api/3/issue/${issue}/worklog`\r\n}","export function debounce_loading(func, timeout = 300){\r\n    let timer;\r\n    return (...args) => {\r\n      timer&&clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        func.apply(this, args);\r\n      }, timeout);\r\n    };\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { DELETE_ROW, EDIT_ACTION } from '../../constants';\r\nimport AutoComplete from '../AutoComplete';\r\n\r\n\r\nconst WorkLog = () => {\r\n  const workLogItems = useSelector(state => state?.worklogs?.workLogItems || []);\r\n  const filterBy = useSelector(state => state?.worklogs?.filterBy || {});\r\n  const dispatch = useDispatch();\r\n  const handleOnChange = (e, id) => {\r\n    dispatch({\r\n      type: EDIT_ACTION,\r\n      payload: {\r\n        id,\r\n        name: e.target.name,\r\n        value: e.target.value\r\n      }\r\n    });\r\n  };\r\n  const delRow = id => {\r\n    dispatch({\r\n      type: DELETE_ROW,\r\n      payload: { id }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='tableContainer'>\r\n      <div className='headerRow'>\r\n        <div className='class_issue'>Issue</div>\r\n        <div className='class_timeSpent'>Time Spent</div>\r\n        <div className='class_logDate'>Date</div>\r\n        <div className='class_comments'>Comment</div>\r\n      </div>\r\n      {workLogItems.length > 0 &&\r\n        workLogItems\r\n          .filter(row => {\r\n            if (filterBy.value !== '') {\r\n              if (filterBy.name === 'filterByIssue') {\r\n                return row.issue.includes(filterBy.value) || row.comment.includes(filterBy.value);\r\n              }\r\n            }\r\n            return row;\r\n          })\r\n          .map(row => {\r\n            return (\r\n              <div key={row.id} style={{ display: 'flex' }} className='logRow'>\r\n                <AutoComplete name='issue' value={row.issue} id={row.id}/>\r\n                <input\r\n                  name=\"timeSpent\"\r\n                  className='class_timeSpent'\r\n                  placeholder='1d | 1h | 1m'\r\n                  value={row.timeSpent}\r\n                  onChange={(e)=> handleOnChange(e, row.id)}\r\n                />\r\n                <input\r\n                  name=\"logDate\"\r\n                  className='class_logDate'\r\n                  type=\"date\"\r\n                  value={row.logDate}\r\n                  onChange={(e)=> handleOnChange(e, row.id)}\r\n                />\r\n                <input\r\n                  name=\"comment\"\r\n                  className='class_comments'\r\n                  placeholder='Comment'\r\n                  value={row.comment}\r\n                  onChange={(e)=> handleOnChange(e, row.id)}\r\n                />\r\n                <button className='del-btn' onClick={() => delRow(row.id)}>-</button>\r\n              </div>\r\n            );\r\n          })\r\n      }\r\n    </div>\r\n  );\r\n};\r\nexport default WorkLog;\r\n","import React from 'react'\r\n\r\nexport default function Button({className, clickHandler, buttonText}) {\r\n    return (\r\n        <button type=\"button\" className={className} onClick={clickHandler}>{buttonText}</button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { saveLogs } from '../redux/save/action';\r\nimport Button from './Button'\r\n\r\nexport default function Save() {\r\n    const dispatch = useDispatch();\r\n    const workLogItems = useSelector(state => state.worklogs.workLogItems);\r\n    const savingInProgress = useSelector(state => state?.loggedDetails?.savingInProgress || false)\r\n    const logsToSave = workLogItems.filter((issue) => issue.issue);\r\n    const onSave = () => {\r\n        dispatch(saveLogs(logsToSave));\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                savingInProgress ? <div className='saveInProgress'>Saving........</div>\r\n                : <Button className=\"btn btn-save\" clickHandler={onSave} buttonText='Save Work Logs' />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { putError } from '../redux/home/action'\r\n\r\nexport default function Error() {\r\n    const error = useSelector(state => state.home.error)\r\n    const dispatch = useDispatch()\r\n    const clearMessage = (e)=>{\r\n        e.preventDefault();\r\n        dispatch(putError({error:''}))\r\n    }\r\n    return (\r\n        error &&\r\n        <div className='error'>\r\n            <div><a href='#' onClick={clearMessage}>clear message</a></div>\r\n            <p>{error}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateSavedLogs } from '../redux/save/action'\r\nimport Error from './Error'\r\n\r\nexport default function SavedLogs() {\r\n    const savedLogs = useSelector(state => state?.loggedDetails?.savedLogs || [])\r\n    const dispatch = useDispatch()\r\n    const onDelWorklog = (url, index)=>{\r\n        console.log(url,index)\r\n        fetch(`${url}`, { method: 'DELETE' })\r\n        .then(response => {\r\n            return response.text();\r\n        })\r\n        .then(text => {\r\n            //console.log(text)\r\n            let logArry = savedLogs.filter((s,i)=> i!==index);\r\n            dispatch(updateSavedLogs({savedLogs: logArry}));\r\n        })\r\n        .catch(err => console.error(err));\r\n    }\r\n    return (\r\n        <div className='savedLogs'>\r\n        {\r\n            savedLogs.length >0 ?\r\n            <>\r\n                <span>Saved log details:</span>\r\n                <ul className='logDetails'>\r\n                    {savedLogs.map((res,i)=>{\r\n                        const {issue, data} = res.value;\r\n                        return (\r\n                            <li key={i}>\r\n                                <span>{issue}:</span>\r\n                                {\r\n                                    data?.self && !data?.errorMessages ? (\r\n                                    <div style={{marginLeft:'1em'}}>\r\n                                        <span> Time Spent : <strong>{data.timeSpent}</strong></span>\r\n                                        <span>,  Date : <strong>{data?.started? data.started?.split('T')?.[0] : ''}</strong></span>\r\n                                        {'  '}\r\n                                        {\r\n                                        data?.self && <button className='logDelBtn' onClick={() => onDelWorklog(data.self, i)}>Delete log</button>\r\n                                        }\r\n                                    </div>\r\n                                    ): (<span style={{color:'red', marginLeft:'1em'}}> {data.errorMessages?.join(',')}</span>)\r\n                                }\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </>\r\n            :  <Error/>\r\n        }\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>\r\n            <span>- Developed by Irfan G G</span>\r\n        </footer>\r\n    )\r\n}\r\n","/*global chrome*/\nimport React, {useEffect} from \"react\";\nimport \"./style.css\";\nimport NewRow from './components/workLog/NewRow'\nimport AutoComment from \"./components/AutoComment\";\nimport WorkLog from \"./components/workLog\";\nimport Save from \"./components/Save\";\nimport SavedLogs from \"./components/SavedLogs\";\nimport { useDispatch } from 'react-redux';\nimport { SAVE_DOMAIN } from \"./constants\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const queryInfo = {active: true, lastFocusedWindow: true};\n    chrome.tabs && chrome.tabs.query(queryInfo, tabs => {\n        const url = tabs[0].url;\n        console.log(url)\n        dispatch({\n          type: SAVE_DOMAIN,\n          payload: {domain:url.split('/')[2]}\n        })\n    });\n  }, []);\n  return (\n    <div className=\"App\">\n      <NewRow />\n      <AutoComment />\n      <WorkLog />\n      <Save />\n      <SavedLogs />\n      <Footer />\n    </div>\n  );\n};\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\n\r\nimport './style.css';\r\nimport App from './App';\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {/* <PersistGate loading={null} persistor={persistor}> */}\r\n    <App />\r\n    {/* </PersistGate> */}\r\n  </Provider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}